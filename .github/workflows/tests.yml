name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-wheels:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.12]
        architecture: [x86, arm64]
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Setup Python for the selected version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install Python headers (Ubuntu)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install python3-dev python3-pip python3-venv

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install python3

      # Install Rust toolchain
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install maturin
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install maturin
          pip show maturin

      - name: Add library to venv
        run: |
          . venv/bin/activate
          maturin develop --features=python

      - name: Run Rust tests
        run: cargo test --features=python_test

      - name: Run Python tests
        run: |
          . venv/bin/activate
          python test_python.py

      - name: Build wheels
        run: |
          . venv/bin/activate
          maturin build --features=python --release --strip --manylinux=off --target ${{ matrix.architecture }}
